/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./engin/advanceElementDefine.ts":
/*!***************************************!*\
  !*** ./engin/advanceElementDefine.ts ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./elementDefine */ \"./engin/elementDefine.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, elementDefine_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    elementDefine_1 = __importDefault(elementDefine_1);\r\n    var barcodeObject = /** @class */ (function (_super) {\r\n        __extends(barcodeObject, _super);\r\n        function barcodeObject(info, offscreenCanvas, canvas) {\r\n            var _this = _super.call(this, info, canvas, offscreenCanvas) || this;\r\n            _this._barcodeText = info.text;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(barcodeObject.prototype, \"barcodeText\", {\r\n            get: function () {\r\n                return this._barcodeText;\r\n            },\r\n            set: function (val) {\r\n                this._barcodeText = val;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        barcodeObject.prototype.getBarcodeImage = function () {\r\n        };\r\n        barcodeObject.prototype.beforeDestoryed = function () {\r\n        };\r\n        barcodeObject.prototype.afterDestoryed = function () {\r\n        };\r\n        barcodeObject.prototype.onStep = function () {\r\n        };\r\n        barcodeObject.prototype.created = function () {\r\n        };\r\n        barcodeObject.prototype.onDraw = function (ctx) {\r\n            // JsBarcode(this.offscreenCache.canvas,this.barcodeText)\r\n        };\r\n        return barcodeObject;\r\n    }(elementDefine_1.default.elementObject));\r\n    exports.default = { barcodeObject: barcodeObject };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://printTemplate/./engin/advanceElementDefine.ts?");

/***/ }),

/***/ "./engin/elementDefine.ts":
/*!********************************!*\
  !*** ./engin/elementDefine.ts ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    var elementObject = /** @class */ (function () {\r\n        function elementObject(info, canvas, offscreenCache) {\r\n            this.changFlage = false;\r\n            this.oldProperty = {};\r\n            this._width = info.w || 100;\r\n            this._height = info.h || 100;\r\n            this.Vx = info.Vx || 0;\r\n            this.Vy = info.Vy || 0;\r\n            this.x = info.x || 0;\r\n            this.y = info.y || 0;\r\n            this.z = info.z || 0;\r\n            this.canvas = canvas;\r\n            this.offscreenCache = offscreenCache;\r\n            this.created();\r\n            this.focused = false;\r\n        }\r\n        Object.defineProperty(elementObject.prototype, \"width\", {\r\n            get: function () {\r\n                return this._width;\r\n            },\r\n            set: function (width) {\r\n                this._width = width;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(elementObject.prototype, \"height\", {\r\n            get: function () {\r\n                return this._height;\r\n            },\r\n            set: function (height) {\r\n                this.offscreenCache.isBuild = false;\r\n                this._height = height;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        elementObject.prototype.draw = function () {\r\n            if (!this.offscreenCache.isBuild) {\r\n                this.offscreenCache.canvas.width = this.width;\r\n                this.offscreenCache.canvas.height = this.height;\r\n                var ctx = this.offscreenCache.canvas.getContext('2d');\r\n                this.onDraw(ctx);\r\n                this.offscreenCache.isBuild = true;\r\n            }\r\n            if (this.focused) {\r\n                this.canvas.ctx.strokeStyle = \"#F00\";\r\n                this.canvas.ctx.lineWidth = \"2\";\r\n                this.canvas.ctx.strokeRect(this.x, this.y, this.width, this.height);\r\n            }\r\n            this.canvas.ctx.drawImage(this.offscreenCache.canvas, this.x, this.y);\r\n        };\r\n        ;\r\n        elementObject.prototype.move = function (dt) {\r\n            this.x += ~~(this.Vx * dt);\r\n            this.y += ~~(this.Vy * dt);\r\n        };\r\n        elementObject.prototype.step = function (dt) {\r\n            // this.watchData()\r\n            this.move(dt);\r\n            this.onStep(dt);\r\n        };\r\n        elementObject.prototype.destoryed = function (elementObj) {\r\n            this.beforeDestoryed(elementObj);\r\n            this.canvas.remove(elementObj);\r\n        };\r\n        return elementObject;\r\n    }());\r\n    var rectangleObject = /** @class */ (function (_super) {\r\n        __extends(rectangleObject, _super);\r\n        function rectangleObject(info, canvas, offScreenCanvas) {\r\n            var _this = _super.call(this, info, canvas, offScreenCanvas) || this;\r\n            _this.TargetLifeCycle = Infinity;\r\n            _this.lifeCycle = 0;\r\n            _this.color = info.color || \"rgb(245, 240, 240)\";\r\n            return _this;\r\n        }\r\n        rectangleObject.prototype.beforeDestoryed = function () {\r\n        };\r\n        rectangleObject.prototype.afterDestoryed = function () {\r\n        };\r\n        rectangleObject.prototype.created = function () {\r\n        };\r\n        rectangleObject.prototype.onStep = function (dt) {\r\n        };\r\n        rectangleObject.prototype.onDraw = function () {\r\n        };\r\n        return rectangleObject;\r\n    }(elementObject));\r\n    var spriteObject = /** @class */ (function (_super) {\r\n        __extends(spriteObject, _super);\r\n        function spriteObject(info, offscreenCanvas, canvas) {\r\n            var _this = _super.call(this, info, canvas, offscreenCanvas) || this;\r\n            _this.sprite = info.spiteInfo;\r\n            console.log(info);\r\n            return _this;\r\n        }\r\n        spriteObject.prototype.onDraw = function (ctx) {\r\n            ctx.drawImage(this.sprite.Img, this.sprite.sx, this.sprite.sy, this.sprite.w, this.sprite.h, 0, 0, this.width, this.height);\r\n        };\r\n        spriteObject.prototype.beforeDestoryed = function () {\r\n        };\r\n        spriteObject.prototype.afterDestoryed = function () {\r\n        };\r\n        spriteObject.prototype.created = function () {\r\n        };\r\n        spriteObject.prototype.step = function (dt) {\r\n            this.move(dt);\r\n            this.onStep(dt);\r\n        };\r\n        spriteObject.prototype.onStep = function (dt) {\r\n        };\r\n        return spriteObject;\r\n    }(elementObject));\r\n    var textObject = /** @class */ (function (_super) {\r\n        __extends(textObject, _super);\r\n        function textObject(info, offScreen, canvas) {\r\n            var _this = _super.call(this, info, canvas, offScreen) || this;\r\n            _this._color = info.color || \"#000\";\r\n            _this._fontFamily = info.fontFamily || \"微软雅黑\";\r\n            _this._textAlign = info.textAlign || \"center\";\r\n            _this._fontSize = info.fontSize || 20;\r\n            _this._borderColor = info.borderColor || \"#000\";\r\n            _this._borderWidth = info.borderWidth || 1;\r\n            _this._text = info.text;\r\n            _this._autoFeed = info.autoFeed || false;\r\n            _this._bordered = info.bordered || false;\r\n            _this._background = info.background || undefined;\r\n            _this.focused = true;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(textObject.prototype, \"color\", {\r\n            get: function () {\r\n                return this._color;\r\n            },\r\n            set: function (color) {\r\n                this._color = color;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"fontSize\", {\r\n            get: function () {\r\n                return this._fontSize;\r\n            },\r\n            set: function (fontSize) {\r\n                this._fontSize = fontSize;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"fontFamily\", {\r\n            get: function () {\r\n                return this._fontFamily;\r\n            },\r\n            set: function (fontFamily) {\r\n                this._fontFamily = fontFamily;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"borderColor\", {\r\n            get: function () {\r\n                return this._borderColor;\r\n            },\r\n            set: function (_borderColor) {\r\n                this._borderColor = _borderColor;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"text\", {\r\n            get: function () {\r\n                return this._text;\r\n            },\r\n            set: function (text) {\r\n                this._text = text;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"bordered\", {\r\n            get: function () {\r\n                return this._bordered;\r\n            },\r\n            set: function (_bordered) {\r\n                this._bordered = _bordered;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"borderWidth\", {\r\n            get: function () {\r\n                return this._fontSize;\r\n            },\r\n            set: function (borderWidth) {\r\n                this._borderWidth = borderWidth;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"autoFeed\", {\r\n            get: function () {\r\n                return this._autoFeed;\r\n            },\r\n            set: function (_autoFeed) {\r\n                this._bordered = _autoFeed;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"background\", {\r\n            get: function () {\r\n                return this._text;\r\n            },\r\n            set: function (background) {\r\n                this._background = background;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(textObject.prototype, \"textAlign\", {\r\n            get: function () {\r\n                return this._textAlign;\r\n            },\r\n            set: function (textAlign) {\r\n                this._textAlign = textAlign;\r\n                this.offscreenCache.isBuild = false;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        textObject.prototype.onDraw = function (ctx) {\r\n            var _this = this;\r\n            if (this._bordered) {\r\n                ctx.strokeStyle = this._borderColor;\r\n                ctx.lineWidth = this._borderWidth;\r\n                ctx.strokeRect(0, 0, this.width, this.height);\r\n            }\r\n            if (this._background) {\r\n                ctx.fillStyle = this.background;\r\n                ctx.fillRect(this.borderWidth, this._borderWidth, this.width - this.borderWidth * 2, this.height - this.borderWidth * 2);\r\n            }\r\n            ctx.font = this.fontSize + \"px \" + this.fontFamily;\r\n            ctx.textAlign = this.textAlign;\r\n            console.log(this.fontSize + \" px \" + this.fontFamily);\r\n            ctx.fillStyle = this.color;\r\n            if (this.autoFeed) { // 自动换行\r\n                var arr_1 = this.getAutoFeed();\r\n                console.log(arr_1);\r\n                arr_1.forEach(function (element, index) {\r\n                    if (_this.textAlign === \"center\") {\r\n                        ctx.fillText(element, _this.width / 2, (_this.height / 2 - (_this.fontSize * arr_1.length - 1) / 2 + _this.fontSize * (index + 1)));\r\n                    }\r\n                    else if (_this.textAlign === \"left\") {\r\n                        ctx.fillText(element, 0, (0 + 2 * _this.fontSize * index) / 2);\r\n                    }\r\n                    else if (_this.textAlign = \"right\") {\r\n                        ctx.fillText(element, _this.width, (_this.height / 2 + 2 * _this.fontSize * index) / 2);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this.textAlign === \"center\") {\r\n                    ctx.fillText(this.text, this.width / 2, (this.height + this.fontSize / 2) / 2);\r\n                }\r\n                else if (this.textAlign === \"left\") {\r\n                    ctx.fillText(this.text, 0, (this.height + this.fontSize / 2) / 2);\r\n                }\r\n                else if (this.textAlign = \"right\") {\r\n                    ctx.fillText(this.text, this.width, (this.height + this.fontSize / 2) / 2);\r\n                }\r\n            }\r\n        };\r\n        textObject.prototype.beforeDestoryed = function () {\r\n        };\r\n        textObject.prototype.getAutoFeed = function () {\r\n            var res = [], widthCount = 0, start = 0;\r\n            for (var i = 0; i < this.text.length; i++) {\r\n                var unicode = this.text.charCodeAt(i);\r\n                if ((unicode >= 0x4e00 && unicode < 0x9fa5) || (unicode >= 65281 && unicode <= 65374) || unicode === 12288) {\r\n                    if (widthCount + this.fontSize > this.width) {\r\n                        res.push(this.text.substr(start, i - start - 1));\r\n                        start = i - 1;\r\n                        widthCount = 0;\r\n                    }\r\n                    widthCount += this.fontSize;\r\n                }\r\n                else {\r\n                    if (widthCount + this.fontSize / 2 > this.width) {\r\n                        res.push(this.text.substr(start, i - start - 1));\r\n                        start = i - 1;\r\n                        widthCount = 0;\r\n                    }\r\n                    widthCount += this.fontSize / 2;\r\n                }\r\n            }\r\n            if (start < this.text.length) {\r\n                res.push(this.text.substr(start, this.text.length - start));\r\n            }\r\n            return res;\r\n        };\r\n        textObject.prototype.afterDestoryed = function () {\r\n        };\r\n        textObject.prototype.created = function () {\r\n        };\r\n        textObject.prototype.onStep = function (dt) {\r\n        };\r\n        return textObject;\r\n    }(elementObject));\r\n    exports.default = {\r\n        textObject: textObject,\r\n        elementObject: elementObject,\r\n        // seqSpriteObject,\r\n        // roundObject,\r\n        // triangleObject,\r\n        spriteObject: spriteObject\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n//# sourceURL=webpack://printTemplate/./engin/elementDefine.ts?");

/***/ }),

/***/ "./engin/engin.ts":
/*!************************!*\
  !*** ./engin/engin.ts ***!
  \************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./elementDefine */ \"./engin/elementDefine.ts\"), __webpack_require__(/*! ./advanceElementDefine */ \"./engin/advanceElementDefine.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, elementDefine_1, advanceElementDefine_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    elementDefine_1 = __importDefault(elementDefine_1);\r\n    advanceElementDefine_1 = __importDefault(advanceElementDefine_1);\r\n    var canvas2d = /** @class */ (function () {\r\n        function canvas2d(el, width, height) {\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.displayFrameRate = true;\r\n            this.rate = 0;\r\n            this.clickThrough = false;\r\n            this.lastTime = 0;\r\n            this.maxTime = 1 / 30;\r\n            this.offScreen = [];\r\n            this.interval = 0;\r\n            this.gameBoard = [];\r\n            this.background = [];\r\n            this.canvas = document.createElement(\"canvas\");\r\n            this.canvas.id = \"mainCanvas\";\r\n            this.canvas.width = width;\r\n            this.canvas.height = height;\r\n            this.canvas.style.border = \"solid 1px #666\";\r\n            this.width = width;\r\n            this.height = height;\r\n            this.root = document.getElementById(el);\r\n            this.root.appendChild(this.canvas);\r\n            this.ctx = this.canvas.getContext('2d');\r\n        }\r\n        canvas2d.prototype.allowDrop = function (event) {\r\n            event.preventDefault();\r\n        };\r\n        canvas2d.prototype.stopLoop = function () {\r\n            window.cancelAnimationFrame(this.t);\r\n        };\r\n        canvas2d.prototype.enableKeyupEventLisener = function () {\r\n            var _this = this;\r\n            document.addEventListener(\"keyup\", function (e) {\r\n                if (e.key === 'Delete') {\r\n                    _this.gameBoard = _this.gameBoard.filter(function (element) {\r\n                        return !element.focused;\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        canvas2d.prototype.enableClickEventLisener = function () {\r\n            var _this = this;\r\n            console.log(\"23-----3\");\r\n            console.log(this.canvas);\r\n            this.root.ondragover = this.allowDrop;\r\n            this.root.style.overflow = \"hidden\";\r\n            this.root.style.position = 'relative';\r\n            this.canvas.addEventListener(\"click\", function (e) {\r\n                console.log(_this.canvas.getBoundingClientRect());\r\n                var left = e.clientX - _this.canvas.getBoundingClientRect().x;\r\n                var top = e.clientY - _this.canvas.getBoundingClientRect().y;\r\n                var clickFlag = true;\r\n                var controlDiv = document.getElementById(\"control-div\");\r\n                if (controlDiv) {\r\n                    _this.root.removeChild(controlDiv);\r\n                }\r\n                console.log(left, top);\r\n                if (_this.clickThrough) {\r\n                    for (var i = _this.gameBoard.length - 1; i > -1; i--) {\r\n                        if (top > _this.gameBoard[i].y && top < (_this.gameBoard[i].y + _this.gameBoard[i].height) && left > _this.gameBoard[i].x && (_this.gameBoard[i].x + _this.gameBoard[i].width) > left) {\r\n                            _this.gameBoard[i].focused = true;\r\n                        }\r\n                        else {\r\n                            _this.gameBoard[i].focused = false;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (var i = _this.gameBoard.length - 1; i > -1; i--) {\r\n                        if (clickFlag && top > _this.gameBoard[i].y && top < (_this.gameBoard[i].y + _this.gameBoard[i].height) && left > _this.gameBoard[i].x && (_this.gameBoard[i].x + _this.gameBoard[i].width) > left) {\r\n                            _this.gameBoard[i].focused = true;\r\n                            clickFlag = false;\r\n                            _this.createHtmlDom(i);\r\n                        }\r\n                        else {\r\n                            _this.gameBoard[i].focused = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        canvas2d.prototype.createHtmlDom = function (elementIndex) {\r\n            var _this = this;\r\n            var appendDiv = document.createElement('div');\r\n            appendDiv.style.position = \"absolute\";\r\n            appendDiv.id = \"control-div\";\r\n            appendDiv.style.width = this.gameBoard[elementIndex].width;\r\n            appendDiv.style.height = this.gameBoard[elementIndex].height;\r\n            appendDiv.style.left = this.gameBoard[elementIndex].x;\r\n            appendDiv.style.top = this.gameBoard[elementIndex].y;\r\n            appendDiv.style.border = \"#0F0 solid 1px\";\r\n            appendDiv.setAttribute(\"bindIndex\", elementIndex.toString());\r\n            appendDiv.draggable = true;\r\n            appendDiv.style.cursor = \"move\";\r\n            appendDiv.ondragstart = function (el) { return _this.elementOnDragStart(el, _this); };\r\n            appendDiv.ondragend = function (el) { return _this.elementOnDragEnd(el, _this.gameBoard[elementIndex], _this); };\r\n            appendDiv.ondrag = function (el) { return _this.elementOnDrag(el, _this.gameBoard[elementIndex]); };\r\n            this.root.appendChild(appendDiv);\r\n            appendDiv.appendChild(this.createControlPoint(0, this.gameBoard[elementIndex].height / 2, 'w-resize', elementIndex));\r\n            appendDiv.appendChild(this.createControlPoint(this.gameBoard[elementIndex].width, this.gameBoard[elementIndex].height / 2, 'e-resize', elementIndex));\r\n            appendDiv.appendChild(this.createControlPoint(this.gameBoard[elementIndex].width / 2, 0, 'n-resize', elementIndex));\r\n            appendDiv.appendChild(this.createControlPoint(this.gameBoard[elementIndex].width / 2, this.gameBoard[elementIndex].height, 's-resize', elementIndex));\r\n        };\r\n        canvas2d.prototype.createControlPoint = function (x, y, cursorType, elementIndex) {\r\n            var _this = this;\r\n            var controlPoint = document.createElement('div');\r\n            controlPoint.style.width = \"10px\";\r\n            controlPoint.style.height = '10px';\r\n            controlPoint.style.borderRadius = \"5px\";\r\n            controlPoint.style.border = \"#666 solid 1px\";\r\n            controlPoint.style.position = \"absolute\";\r\n            controlPoint.style.top = y - 5 + \"px\";\r\n            controlPoint.style.left = x - 5 + \"px\";\r\n            controlPoint.draggable = true;\r\n            controlPoint.id = cursorType;\r\n            controlPoint.style.cursor = cursorType;\r\n            controlPoint.ondragstart = function (el) { return _this.onResizeStart(el, _this); };\r\n            controlPoint.ondrag = function (el) { return _this.onResize(el, _this.gameBoard[elementIndex], cursorType); };\r\n            controlPoint.ondragend = function (el) { return _this.onResizeEnd(el, _this.gameBoard[elementIndex], cursorType, _this); };\r\n            return controlPoint;\r\n        };\r\n        // updateControlPoint(element: any) {\r\n        //     let typeList = [{ key: \"s-resize\", x: element.width / 2, y: element.height },\r\n        //     { key: \"e-resize\", x: element.width,y: element.height / 2 }, \r\n        //     { key: \"n-resize\", x: element.width / 2, y: 0 }, \r\n        //     { key: \"w-resize\", x: 0, y: element.height / 2 }]\r\n        //     typeList.forEach(ele => {\r\n        //         let dom = document.getElementById(ele.key)\r\n        //         if (dom) {\r\n        //             dom.style.top = ele.y - 5 + \"px\"\r\n        //             dom.style.left = ele.x - 5 + \"px\"\r\n        //         }\r\n        //     })\r\n        // }\r\n        canvas2d.prototype.elementOnDragStart = function (event, that) {\r\n            // event.preventDefault()\r\n            // event.dataTransfer.dropEffect = \"copy\";\r\n            event.cancelBubble = true;\r\n            console.log(event);\r\n            // that.loop()\r\n        };\r\n        canvas2d.prototype.onResizeStart = function (event, that) {\r\n            // that.loop()\r\n            // event.dataTransfer.dropEffect = \"copy\";\r\n            event.cancelBubble = true;\r\n            console.log(event.target.id);\r\n            event.dataTransfer.setData(\"text/plain\", event.target.id);\r\n        };\r\n        canvas2d.prototype.onResize = function (event, changElement, cursorType) {\r\n            event.cancelBubble = true;\r\n            // if(cursorType===\"n-resize\"){\r\n            //     changElement.height+=(event.offsetY/100)\r\n            //     if(changElement.height<50){\r\n            //         changElement.height=50\r\n            //     }\r\n            // }else if(cursorType==\"e-resize\"){\r\n            //     changElement.width+=(event.offsetX/100)\r\n            //     if(changElement.width<50){\r\n            //         changElement.width=50\r\n            //     }\r\n            // }\r\n        };\r\n        canvas2d.prototype.onResizeEnd = function (event, changElement, cursorType, that) {\r\n            event.cancelBubble = true;\r\n            console.log(event);\r\n            console.log(event.dataTransfer.getData(\"text\"));\r\n            var dom = document.getElementById(event.dataTransfer.getData(\"Text\"));\r\n            if (dom) {\r\n                dom.style.left = event.clientX;\r\n                dom.style.top = event.clientY;\r\n                changElement.x = event.clientX - changElement.width / 2;\r\n                changElement.y = event.clientY - changElement.height / 2;\r\n                // dom.style.left =changElement.x.toString();\r\n                // dom.style.top = changElement.y.toString()\r\n            }\r\n            if (cursorType === \"n-resize\") {\r\n                console.log(event.offsetY);\r\n                changElement.height -= event.offsetY;\r\n                changElement.y += event.offsetY;\r\n                if (changElement.height < 50) {\r\n                    changElement.height = 50;\r\n                }\r\n            }\r\n            else if (cursorType == \"e-resize\") {\r\n                changElement.width += event.offsetX;\r\n                if (changElement.width < 50) {\r\n                    changElement.width = 50;\r\n                }\r\n            }\r\n            else if (cursorType == \"w-resize\") {\r\n                changElement.width -= event.offsetX;\r\n                changElement.x += event.offsetX;\r\n                if (changElement.width < 50) {\r\n                    changElement.width = 50;\r\n                }\r\n            }\r\n            else if (cursorType == \"s-resize\") {\r\n                changElement.height += event.offsetY;\r\n                if (changElement.width < 50) {\r\n                    changElement.width = 50;\r\n                }\r\n            }\r\n            var typeList = [{ key: \"s-resize\", x: changElement.width / 2, y: changElement.height },\r\n                { key: \"e-resize\", x: changElement.width, y: changElement.height / 2 },\r\n                { key: \"n-resize\", x: changElement.width / 2, y: 0 },\r\n                { key: \"w-resize\", x: 0, y: changElement.height / 2 }];\r\n            typeList.forEach(function (ele) {\r\n                var dom = document.getElementById(ele.key);\r\n                if (dom) {\r\n                    dom.style.top = ele.y - 5 + \"px\";\r\n                    dom.style.left = ele.x - 5 + \"px\";\r\n                }\r\n            });\r\n            dom = document.getElementById('control-div');\r\n            if (dom) {\r\n                dom.style.width = changElement.width;\r\n                dom.style.height = changElement.height;\r\n            }\r\n            // window.setInterval(()=>{\r\n            //     that.stopLoop()\r\n            // },5000)\r\n        };\r\n        canvas2d.prototype.elementOnDrag = function (event, changElement) {\r\n            event.preventDefault();\r\n            event.cancelBubble = true;\r\n            changElement.x = event.clientX - changElement.width / 2;\r\n            changElement.y = event.clientY - changElement.height / 2;\r\n        };\r\n        canvas2d.prototype.elementOnDragEnd = function (event, changElement, that) {\r\n            event.cancelBubble = true;\r\n            var dom = document.getElementById('control-div');\r\n            if (dom) {\r\n                dom.style.left = event.clientX;\r\n                dom.style.top = event.clientY;\r\n                changElement.x = event.clientX - changElement.width / 2;\r\n                changElement.y = event.clientY - changElement.height / 2;\r\n                dom.style.left = changElement.x.toString();\r\n                dom.style.top = changElement.y.toString();\r\n            }\r\n            // window.setInterval(()=>{\r\n            //     that.stopLoop()\r\n            // },5000)\r\n        };\r\n        canvas2d.prototype.disableClickEventLisener = function () {\r\n        };\r\n        canvas2d.prototype.frameRate = function (dt) {\r\n            this.interval += dt;\r\n            if (this.interval > 2) {\r\n                this.interval = 0;\r\n                this.rate = ~~(1 / dt);\r\n            }\r\n            this.ctx.fillStyle = \"rgb(0,255,0)\";\r\n            this.ctx.font = \"40px Verdana\";\r\n            this.ctx.fillText(\"FPS:\" + this.rate, 40, 40);\r\n        };\r\n        canvas2d.prototype.push = function (obj, type) {\r\n            if (type === \"bg\") {\r\n                this.background.push();\r\n            }\r\n            this.gameBoard.push(obj);\r\n        };\r\n        canvas2d.prototype.removeBg = function (obj) {\r\n            var p = this.background.indexOf(obj);\r\n            this.background.splice(p, 1);\r\n        };\r\n        canvas2d.prototype.remove = function (obj, index) {\r\n            if (index !== undefined) {\r\n                this.gameBoard.splice(index, 1);\r\n            }\r\n            else {\r\n                var p = this.gameBoard.indexOf(obj);\r\n                this.gameBoard.splice(p, 1);\r\n            }\r\n        };\r\n        canvas2d.prototype.createElement = function (type, info) {\r\n            var obj = {};\r\n            if (type === \"round\") {\r\n                //    this.offScreen.push(new offscreenCanvas(document.createElement('canvas')))\r\n                //    obj=new element.roundObject(info,this.offScreen.length-1)\r\n            }\r\n            else if (type === \"spite\") {\r\n                // if (info.targerFrame) {\r\n                //     // obj=new element.seqSpriteObject(info,sprite,this)\r\n                // } else {\r\n                var offScreenCanavs = new offscreenCanvas();\r\n                this.offScreen.push(offScreenCanavs);\r\n                obj = new elementDefine_1.default.spriteObject(info, offScreenCanavs, this);\r\n                // }\r\n            }\r\n            else if (type === \"rect\") {\r\n                // obj=new element.rectangleObject(info,this)\r\n            }\r\n            // else if(type===\"triangel\"){\r\n            //     obj=new element.rectangleObject(info)\r\n            // }\r\n            else if (type === \"text\") {\r\n                var offscreenCache = new offscreenCanvas();\r\n                this.offScreen.push(offscreenCache);\r\n                obj = new elementDefine_1.default.textObject(info, offscreenCache, this);\r\n            }\r\n            else if (type === \"barcode\") {\r\n                var offscreenCache = new offscreenCanvas();\r\n                this.offScreen.push(offscreenCache);\r\n                obj = new advanceElementDefine_1.default.barcodeObject(info, offscreenCache, this);\r\n            }\r\n            return obj;\r\n        };\r\n        canvas2d.prototype.loop = function () {\r\n            var _this = this;\r\n            var dt = this.lastTime;\r\n            this.lastTime = new Date().getTime();\r\n            dt = (this.lastTime - dt) / 1000;\r\n            var tempDt = dt;\r\n            if (dt > this.maxTime) {\r\n                dt = this.maxTime;\r\n            }\r\n            this.canvas.width = this.width;\r\n            for (var j = 0; j < this.background.length; j++) {\r\n                this.background[j].draw();\r\n                this.background[j].step(dt);\r\n            }\r\n            for (var i = 0; i < this.gameBoard.length; i++) {\r\n                this.gameBoard[i].draw();\r\n                this.gameBoard[i].step(dt);\r\n            }\r\n            if (this.displayFrameRate) {\r\n                this.frameRate(tempDt);\r\n            }\r\n            this.t = requestAnimationFrame(function () {\r\n                _this.loop();\r\n            });\r\n        };\r\n        return canvas2d;\r\n    }());\r\n    exports.default = canvas2d;\r\n    var audio = /** @class */ (function () {\r\n        function audio(src, currentTime, sustainTime) {\r\n            this.currentTime = 0;\r\n            this.playTime = 0;\r\n            this.sustainTime = -1;\r\n            this.loop = false;\r\n            this.volume = 1;\r\n            this.el = new Audio();\r\n            this.el.src = src;\r\n            if (currentTime !== undefined) {\r\n                this.currentTime = currentTime;\r\n            }\r\n            if (sustainTime !== undefined) {\r\n                this.sustainTime = sustainTime;\r\n            }\r\n        }\r\n        audio.prototype.play = function () {\r\n            this.el.currentTime = this.currentTime;\r\n            this.playTime = 0;\r\n            if (this.loop) {\r\n                this.el.loop = true;\r\n            }\r\n            // this.el.fastSeek(1)\r\n            this.el.play();\r\n        };\r\n        audio.prototype.pause = function () {\r\n            this.el.pause();\r\n        };\r\n        return audio;\r\n    }());\r\n    var control = /** @class */ (function () {\r\n        function control() {\r\n        }\r\n        return control;\r\n    }());\r\n    var collision = /** @class */ (function () {\r\n        function collision(type, mode) {\r\n            this.Collision = [];\r\n            this.type = type;\r\n            this.mode = mode || \"single\";\r\n            this.isCollision = false;\r\n        }\r\n        collision.prototype.overlape = function (obj1, obj2) {\r\n            return !((obj1.x + obj1.width) < obj2.x || (obj1.y + obj1.height) < obj2.y ||\r\n                (obj2.x + obj2.width) < obj1.x || (obj2.y + obj2.height) < obj1.y);\r\n        };\r\n        collision.prototype.checkCollision = function (obj1, that) {\r\n            for (var i = 0; i < that.gameBoard.length; i++) {\r\n                if (that.gameBoard[i].col && obj1.col.type === that.gameBoard[i].col.type && obj1 !== that.gameBoard[i]) {\r\n                    if (this.overlape(obj1, that.gameBoard[i])) {\r\n                        obj1.col.isCollision = true;\r\n                        that.gameBoard[i].col.isCollision = true;\r\n                        // this.Collision.push(that.gameBoard[i])\r\n                        if (this.mode === \"single\") {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        obj1.col.isCollision = false;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return collision;\r\n    }());\r\n    var offscreenCanvas = /** @class */ (function () {\r\n        function offscreenCanvas() {\r\n            this.isBuild = false;\r\n            this.canvas = document.createElement('canvas');\r\n        }\r\n        return offscreenCanvas;\r\n    }());\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n// function defineReactive(obj:any,key:any,val:any){\r\n//     Object.defineProperty(obj,key,{\r\n//         get(){\r\n//             return val\r\n//         },\r\n//         set(newVal){\r\n//             if(newVal !== val){\r\n//                 val = newVal\r\n//                 console.log('set', newVal);\r\n//                 // 在这里已经监听到了数据的变化，后续可以做一些更新视图的操作\r\n//             }\r\n//         }\r\n//     })\r\n// }\r\n\n\n//# sourceURL=webpack://printTemplate/./engin/engin.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./engin/engin.ts");
/******/ })()
;